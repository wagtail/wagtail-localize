name: Localize CI

on:
  push:
    branches:
      - main
      - 'stable/**'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

env:
  FORCE_COLOR: '1' # Make tools pretty.
  TOX_TESTENV_PASSENV: FORCE_COLOR
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  PIP_NO_PYTHON_VERSION_WARNING: '1'
  PYTHON_LATEST: '3.13'

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.11', '3.12', '3.13']
        database: ['sqlite']

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade uv
          python -m uv pip install setuptools wheel tox tox-gh-actions
      - name: Test with tox
        run: tox -q -- -v1
        env:
          DATABASE: sqlite
      - name: ⬆️ Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python }}-sqlite
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore
          retention-days: 1

  test-postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
        database: ['postgres']

    services:
      postgres:
        image: bitnami/postgresql:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRESQL_PASSWORD: postgres
          POSTGRESQL_FSYNC: 'off'
          POSTGRESQL_DATA_DIR: /dev/shm/pgdata
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -d postgres -U postgres -p 5432" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        id: install-dependencies
        run: |
          python -Im pip install --upgrade uv
          python -Im uv pip install setuptools wheel tox tox-gh-actions
      - name: Test with tox
        run: tox -q -- -v1
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          DATABASE: postgres
      - name: ⬆️ Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python }}-postgres
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore
          retention-days: 1

  coverage:
    runs-on: ubuntu-latest
    needs:
      - test-sqlite
      - test-postgres
    strategy:
      matrix:
        python: ['3.13']

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          # Use latest Python, so it understands all syntax.
          python-version: ${{env.PYTHON_LATEST}}

      - name: Install dependencies
        run: |
          python -Im pip install --upgrade uv
          python -Im uv pip install "coverage>=7.0,<8.0"

      - name: ⬇️ Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: ＋ Combine coverage
        run: |
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty
          python -Im coverage report

      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
